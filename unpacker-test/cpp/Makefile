# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# GNU Makefile based on shared rules provided by the Native Client SDK.
# See README.Makefiles for more details.

VALID_TOOLCHAINS := newlib pnacl

NACL_SDK_ROOT ?= $(abspath $(CURDIR)/../../..)

# The directory where the NaCl code to test is.
CODE_DIR = ../../unpacker/cpp

include $(NACL_SDK_ROOT)/tools/common.mk

TARGET = main
LIBS = ppapi_simple nacl_io ppapi_cpp ppapi gtest pthread

CFLAGS = -Wall -Wno-sign-compare -I$(CODE_DIR)
SOURCES = \
  fake_lib_archive.cc \
  main.cc \
  $(CODE_DIR)/request.cc \
  request_test.cc \
  $(CODE_DIR)/volume_archive.cc \
  volume_archive_test.cc \
  $(CODE_DIR)/volume_reader_javascript_stream.cc \
  volume_reader_javascript_stream_test.cc

# Build rules generated by macros from common.mk:

$(foreach src,$(SOURCES),$(eval $(call COMPILE_RULE,$(src),$(CFLAGS))))

# The PNaCl workflow uses both an unstripped and finalized/stripped binary.
# On NaCl, only produce a stripped binary for Release configs (not Debug).
ifneq (,$(or $(findstring pnacl,$(TOOLCHAIN)),$(findstring Release,$(CONFIG))))
$(eval $(call LINK_RULE,$(TARGET)_unstripped,$(SOURCES),$(LIBS),$(DEPS)))
$(eval $(call STRIP_RULE,$(TARGET),$(TARGET)_unstripped))
else
$(eval $(call LINK_RULE,$(TARGET),$(SOURCES),$(LIBS),$(DEPS)))
endif

$(eval $(call NMF_RULE,$(TARGET),))
